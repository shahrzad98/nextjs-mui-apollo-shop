stages:
  - master
  - staging
master:
  stage: master
  script:
    - echo @digify:registry=https://${CI_SERVER_HOST}/api/v4/projects/132/packages/npm/ >> .npmrc
    - echo "//${CI_SERVER_HOST}/api/v4/projects/132/packages/npm/:_authToken=${CI_JOB_TOKEN}">>.npmrc
    - echo \"@digify:registry\" \"https://${CI_SERVER_HOST}/api/v4/projects/132/packages/npm/\" >> .yarnrc
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker pull $CI_REGISTRY_IMAGE/prod:latest || true
    - docker build --cache-from $CI_REGISTRY_IMAGE/prod:latest --build-arg NEXT_PUBLIC_APOLLO_URL="https://apollo.digify.shop/graphql" --build-arg NEXT_PUBLIC_REST_URL="https://backend.digify.shop" --tag $CI_REGISTRY_IMAGE/prod:$CI_COMMIT_SHA --tag $CI_REGISTRY_IMAGE/prod:latest .
    - docker push $CI_REGISTRY_IMAGE/prod
  only:
    - master
  tags:
    - shell
staging:
  stage: staging
  script:
    - echo "@digify:registry=https://${CI_SERVER_HOST}/api/v4/projects/132/packages/npm/">>.npmrc
    - echo "//${CI_SERVER_HOST}/api/v4/projects/132/packages/npm/:_authToken=${CI_JOB_TOKEN}">>.npmrc
    - echo \"@digify:registry\" \"https://${CI_SERVER_HOST}/api/v4/projects/132/packages/npm/\">>.yarnrc
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker pull $CI_REGISTRY_IMAGE/staging:latest || true
    - docker build --cache-from $CI_REGISTRY_IMAGE/staging:latest --build-arg NEXT_PUBLIC_APOLLO_URL="https://apollo.apps.digify.shop/graphql" --build-arg NEXT_PUBLIC_REST_URL="https://backend.apps.digify.shop" --tag $CI_REGISTRY_IMAGE/staging:$CI_COMMIT_SHA --tag $CI_REGISTRY_IMAGE/staging:latest .
    - docker push $CI_REGISTRY_IMAGE/staging
  only:
    - staging
  tags:
    - shell
